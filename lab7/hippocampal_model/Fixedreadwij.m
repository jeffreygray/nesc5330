function [FanInCon,cInMatrix,wInMatrix] = Fixedreadwij(filename)
% [FanInCon,cInMatrix,wInMatrix] = readwij(filename)
%
% gets the weight data in NeuroJet form
% this function has been modified from the form automatically
% generated by NeuroJet
% FanInCon is a vector of number of connections
% FanInCon(j) = # inputs to neuron j
%
% cInMatrix is a list of input indices
% cInMatrix(j,1:FanInCon(j)) = list of indices for input
%  neurons into neuron j
%  NOTE: Indices start at zero in NeuroJet so cInMatrix+1
%  gives proper indices for Matlab.
%
% wInMatrix is a list of weights corresponding to cInMatrix
% wInMatrix(j,k) = weight of cInMatrix(j,k)
%

%tic

if (nargin == 0)
	filename = 'wij.dat';
elseif (nargin ~= 1)
	disp('readwij only take one parameter');
	return
end

if ((nargout < 1) | (nargout > 3))
	disp('readwij only outputs 1, 2, or 3 matrices');
	return
end

fid = fopen(filename,'r');
ni = fscanf(fid,'%d',1);

disp('reading in total connections...');
a = fgetl(fid); 
a = fgetl(fid); % remove title from data
FanInCon(1:ni) = fscanf(fid,'%d',ni);

if (nargout > 1)
disp('reading in connections...');
a = fgetl(fid); 
a = fgetl(fid); % remove title from data
for i = 1:ni
	cInMatrix(i,1:FanInCon(i)) = [fscanf(fid,'%d',FanInCon(i))]';
end
end

if (nargout > 2)
disp('reading in weights...');
a = fgetl(fid); 
a = fgetl(fid); % remove title from data
for i = 1:ni
	wInMatrix(i,1:FanInCon(i)) = [fscanf(fid,'%f',FanInCon(i))]';
end
end

fclose(fid);

%toc


return

